<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atguigu.mybatis.mapper.CustomerMapper" >
  <resultMap id="BaseResultMap" type="com.atguigu.mybatis.entities.Customer" >
    <result column="id" property="id" jdbcType="REAL" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="bank" property="bank" jdbcType="VARCHAR" />
    <result column="bank_account" property="bankAccount" jdbcType="VARCHAR" />
    <result column="bankroll" property="bankroll" jdbcType="REAL" />
    <result column="chief" property="chief" jdbcType="VARCHAR" />
    <result column="credit" property="credit" jdbcType="VARCHAR" />
    <result column="fax" property="fax" jdbcType="VARCHAR" />
    <result column="licence_no" property="licenceNo" jdbcType="VARCHAR" />
    <result column="local_tax_no" property="localTaxNo" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="national_tax_no" property="nationalTaxNo" jdbcType="VARCHAR" />
    <result column="no" property="no" jdbcType="VARCHAR" />
    <result column="region" property="region" jdbcType="VARCHAR" />
    <result column="satify" property="satify" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="turnover" property="turnover" jdbcType="REAL" />
    <result column="websit" property="websit" jdbcType="VARCHAR" />
    <result column="zip" property="zip" jdbcType="VARCHAR" />
    <result column="manager_id" property="managerId" jdbcType="REAL" />
    <result column="customer_level" property="customerLevel" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, address, bank, bank_account, bankroll, chief, credit, fax, licence_no, local_tax_no, 
    name, national_tax_no, no, region, satify, state, tel, turnover, websit, zip, manager_id, 
    customer_level
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.atguigu.mybatis.entities.CustomerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.atguigu.mybatis.entities.CustomerExample" >
    delete from customers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.atguigu.mybatis.entities.Customer" >
    insert into customers (id, address, bank, 
      bank_account, bankroll, chief, 
      credit, fax, licence_no, 
      local_tax_no, name, national_tax_no, 
      no, region, satify, 
      state, tel, turnover, 
      websit, zip, manager_id, 
      customer_level)
    values (#{id,jdbcType=REAL}, #{address,jdbcType=VARCHAR}, #{bank,jdbcType=VARCHAR}, 
      #{bankAccount,jdbcType=VARCHAR}, #{bankroll,jdbcType=REAL}, #{chief,jdbcType=VARCHAR}, 
      #{credit,jdbcType=VARCHAR}, #{fax,jdbcType=VARCHAR}, #{licenceNo,jdbcType=VARCHAR}, 
      #{localTaxNo,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{nationalTaxNo,jdbcType=VARCHAR}, 
      #{no,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, #{satify,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{turnover,jdbcType=REAL}, 
      #{websit,jdbcType=VARCHAR}, #{zip,jdbcType=VARCHAR}, #{managerId,jdbcType=REAL}, 
      #{customerLevel,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.atguigu.mybatis.entities.Customer" >
    insert into customers
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="bank != null" >
        bank,
      </if>
      <if test="bankAccount != null" >
        bank_account,
      </if>
      <if test="bankroll != null" >
        bankroll,
      </if>
      <if test="chief != null" >
        chief,
      </if>
      <if test="credit != null" >
        credit,
      </if>
      <if test="fax != null" >
        fax,
      </if>
      <if test="licenceNo != null" >
        licence_no,
      </if>
      <if test="localTaxNo != null" >
        local_tax_no,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="nationalTaxNo != null" >
        national_tax_no,
      </if>
      <if test="no != null" >
        no,
      </if>
      <if test="region != null" >
        region,
      </if>
      <if test="satify != null" >
        satify,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="turnover != null" >
        turnover,
      </if>
      <if test="websit != null" >
        websit,
      </if>
      <if test="zip != null" >
        zip,
      </if>
      <if test="managerId != null" >
        manager_id,
      </if>
      <if test="customerLevel != null" >
        customer_level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=REAL},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="bank != null" >
        #{bank,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null" >
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="bankroll != null" >
        #{bankroll,jdbcType=REAL},
      </if>
      <if test="chief != null" >
        #{chief,jdbcType=VARCHAR},
      </if>
      <if test="credit != null" >
        #{credit,jdbcType=VARCHAR},
      </if>
      <if test="fax != null" >
        #{fax,jdbcType=VARCHAR},
      </if>
      <if test="licenceNo != null" >
        #{licenceNo,jdbcType=VARCHAR},
      </if>
      <if test="localTaxNo != null" >
        #{localTaxNo,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nationalTaxNo != null" >
        #{nationalTaxNo,jdbcType=VARCHAR},
      </if>
      <if test="no != null" >
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="satify != null" >
        #{satify,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="turnover != null" >
        #{turnover,jdbcType=REAL},
      </if>
      <if test="websit != null" >
        #{websit,jdbcType=VARCHAR},
      </if>
      <if test="zip != null" >
        #{zip,jdbcType=VARCHAR},
      </if>
      <if test="managerId != null" >
        #{managerId,jdbcType=REAL},
      </if>
      <if test="customerLevel != null" >
        #{customerLevel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.atguigu.mybatis.entities.CustomerExample" resultType="java.lang.Integer" >
    select count(*) from customers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update customers
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=REAL},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.bank != null" >
        bank = #{record.bank,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAccount != null" >
        bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.bankroll != null" >
        bankroll = #{record.bankroll,jdbcType=REAL},
      </if>
      <if test="record.chief != null" >
        chief = #{record.chief,jdbcType=VARCHAR},
      </if>
      <if test="record.credit != null" >
        credit = #{record.credit,jdbcType=VARCHAR},
      </if>
      <if test="record.fax != null" >
        fax = #{record.fax,jdbcType=VARCHAR},
      </if>
      <if test="record.licenceNo != null" >
        licence_no = #{record.licenceNo,jdbcType=VARCHAR},
      </if>
      <if test="record.localTaxNo != null" >
        local_tax_no = #{record.localTaxNo,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.nationalTaxNo != null" >
        national_tax_no = #{record.nationalTaxNo,jdbcType=VARCHAR},
      </if>
      <if test="record.no != null" >
        no = #{record.no,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null" >
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.satify != null" >
        satify = #{record.satify,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.turnover != null" >
        turnover = #{record.turnover,jdbcType=REAL},
      </if>
      <if test="record.websit != null" >
        websit = #{record.websit,jdbcType=VARCHAR},
      </if>
      <if test="record.zip != null" >
        zip = #{record.zip,jdbcType=VARCHAR},
      </if>
      <if test="record.managerId != null" >
        manager_id = #{record.managerId,jdbcType=REAL},
      </if>
      <if test="record.customerLevel != null" >
        customer_level = #{record.customerLevel,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update customers
    set id = #{record.id,jdbcType=REAL},
      address = #{record.address,jdbcType=VARCHAR},
      bank = #{record.bank,jdbcType=VARCHAR},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      bankroll = #{record.bankroll,jdbcType=REAL},
      chief = #{record.chief,jdbcType=VARCHAR},
      credit = #{record.credit,jdbcType=VARCHAR},
      fax = #{record.fax,jdbcType=VARCHAR},
      licence_no = #{record.licenceNo,jdbcType=VARCHAR},
      local_tax_no = #{record.localTaxNo,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      national_tax_no = #{record.nationalTaxNo,jdbcType=VARCHAR},
      no = #{record.no,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      satify = #{record.satify,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      turnover = #{record.turnover,jdbcType=REAL},
      websit = #{record.websit,jdbcType=VARCHAR},
      zip = #{record.zip,jdbcType=VARCHAR},
      manager_id = #{record.managerId,jdbcType=REAL},
      customer_level = #{record.customerLevel,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>