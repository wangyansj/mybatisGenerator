<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atguigu.mybatis.mapper.StorageMapper" >
  <resultMap id="BaseResultMap" type="com.atguigu.mybatis.entities.Storage" >
    <result column="id" property="id" jdbcType="REAL" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="stock_count" property="stockCount" jdbcType="REAL" />
    <result column="stock_ware" property="stockWare" jdbcType="VARCHAR" />
    <result column="ware_house" property="wareHouse" jdbcType="VARCHAR" />
    <result column="product_id" property="productId" jdbcType="REAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, memo, stock_count, stock_ware, ware_house, product_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.atguigu.mybatis.entities.StorageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from storages
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.atguigu.mybatis.entities.StorageExample" >
    delete from storages
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.atguigu.mybatis.entities.Storage" >
    insert into storages (id, memo, stock_count, 
      stock_ware, ware_house, product_id
      )
    values (#{id,jdbcType=REAL}, #{memo,jdbcType=VARCHAR}, #{stockCount,jdbcType=REAL}, 
      #{stockWare,jdbcType=VARCHAR}, #{wareHouse,jdbcType=VARCHAR}, #{productId,jdbcType=REAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.atguigu.mybatis.entities.Storage" >
    insert into storages
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="stockCount != null" >
        stock_count,
      </if>
      <if test="stockWare != null" >
        stock_ware,
      </if>
      <if test="wareHouse != null" >
        ware_house,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=REAL},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="stockCount != null" >
        #{stockCount,jdbcType=REAL},
      </if>
      <if test="stockWare != null" >
        #{stockWare,jdbcType=VARCHAR},
      </if>
      <if test="wareHouse != null" >
        #{wareHouse,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.atguigu.mybatis.entities.StorageExample" resultType="java.lang.Integer" >
    select count(*) from storages
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update storages
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=REAL},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.stockCount != null" >
        stock_count = #{record.stockCount,jdbcType=REAL},
      </if>
      <if test="record.stockWare != null" >
        stock_ware = #{record.stockWare,jdbcType=VARCHAR},
      </if>
      <if test="record.wareHouse != null" >
        ware_house = #{record.wareHouse,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update storages
    set id = #{record.id,jdbcType=REAL},
      memo = #{record.memo,jdbcType=VARCHAR},
      stock_count = #{record.stockCount,jdbcType=REAL},
      stock_ware = #{record.stockWare,jdbcType=VARCHAR},
      ware_house = #{record.wareHouse,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=REAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>